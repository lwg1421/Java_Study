package com.itskb.ws03.service;

import com.itskb.ws03.dto.AccountDto;
import com.itskb.ws03.dto.UserDto;

public class BankService {
	// 고객 및 계좌는 배열로 관리한다. 각각의 크기는 10과 5로 제한한다
	final int ACCOUNT_SIZE = 5;
	final int USER_SIZE = 10;
	int aIndex = 0;
	int uIndex = 0;
	AccountDto[] accountList;
	UserDto[] userList;
	
	// 기본생성자
	// 생성자에서 테스트를 위한 고객 및 계좌 객체를 생성하고 배열에 저장한다.
	public BankService() {
		accountList = new AccountDto[ACCOUNT_SIZE];
		userList = new UserDto[USER_SIZE];
		
		userList[uIndex++] = new UserDto(1001,"이원근","lwg1421@naver.com","01067761421",false);
		userList[uIndex++] = new UserDto(1002,"Lee","lwg1420@naver.com","01067761422",false);
		userList[uIndex++] = new UserDto(1003,"Kang","lwg1422@naver.com","01067769999",true);
	
		accountList[aIndex++] = new AccountDto(1,"11-111",5000000,1001);
		accountList[aIndex++] = new AccountDto(2,"11-112",3000000,1002);
		accountList[aIndex++] = new AccountDto(3,"11-113",9000000,1001);
		
	}
	
	public AccountDto[] getAccountList(int userSeq) {
		// 배열 생성을 위한 결과 데이터 개수를 체크
		int count = 0;
		for (int i = 0; i<aIndex; i++) {
			if(accountList[i].userSeq == userSeq) {
				count++;
			}
		}
		// 배열 생성
		AccountDto[] result = new AccountDto[count];
		
		// 결과 데이터 담기
		int ix = 0;
		for (int i = 0; i<aIndex; i++) {
			if(accountList[i].userSeq == userSeq) {
				result[ix++] = accountList[i];
			}
		}
		return result;
	}
	
	
	
	
	
}
